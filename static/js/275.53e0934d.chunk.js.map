{"version":3,"file":"static/js/275.53e0934d.chunk.js","mappings":"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","sources":["components/formButton/FormButton.styled.js","components/formButton/FormButton.jsx","components/formField/FormField.styled.js","components/formField/FormField.jsx","components/formFieldWrapper/FormFieldWrapper.styled.js","components/formFieldWrapper/FormFieldWrapper.jsx","components/formikForm/FormikForm.styled.js","components/formikForm/FormikForm.jsx","components/mainTitle/MainTitle.styled.js","components/mainTitle/MainTitle.jsx","components/contactForm/ContactForm.styled.js","components/contactForm/ContactForm.jsx","components/contactListItem/ContactListItem.styled.js","components/contactListItem/ContactListItem.jsx","components/contactList/ContactList.styled.js","redux/contacts/selectors.js","components/contactList/ContactList.jsx","components/filter/Filter.styled.js","components/filter/Filter.jsx","components/secondaryTitle/SecondaryTitle.styled.js","components/secondaryTitle/SecondaryTitle.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SubmitButton = styled.button`\n  padding-top: 8px;\n  padding-bottom: 8px;\n  min-width: 90px;\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 12px;\n  color: #ffffff;\n  text-align: center;\n  text-transform: uppercase;\n  background-color: #2196f3;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background 250ms linear;\n  &:hover,\n  &:focus {\n    background: #188ce8;\n  }\n  &:disabled {\n    background: #bcdcf6;\n  }\n`;\n","import { SubmitButton } from './FormButton.styled';\nimport PropTypes from 'prop-types';\n\nconst FormButton = ({ isLoading = false, children }) => {\n  return (\n    <SubmitButton type=\"submit\" disabled={isLoading}>\n      {children}\n    </SubmitButton>\n  );\n};\n\nexport default FormButton;\n\nFormButton.propTypes = {\n  children: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool,\n};\n","import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FormLabel = styled.label`\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const FormInput = styled(Field)`\n  width: 300px;\n  padding: 3px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormError = styled(ErrorMessage)`\n  max-width: 350px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: red;\n`;\n","import PropTypes from 'prop-types';\nimport { FormLabel, FormInput, FormError } from './FormField.styled';\n\nconst FormField = ({ name, type, title }) => {\n  return (\n    <FormLabel htmlFor={name}>\n      {title}:\n      <FormInput type={type} name={name} />\n      <FormError name={name} component=\"p\" />\n    </FormLabel>\n  );\n};\n\nexport default FormField;\n\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nexport const IntupWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  margin-bottom: 22px;\n`;\n","import PropTypes from 'prop-types';\nimport { IntupWrapper } from './FormFieldWrapper.styled';\n\nconst FormFieldWrapper = ({ children }) => {\n  return <IntupWrapper>{children}</IntupWrapper>;\n};\n\nexport default FormFieldWrapper;\n\nFormFieldWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const SubmitForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 450px;\n  border: 2px solid #2196f3;\n  border-radius: 4px;\n  padding: 50px;\n`;\n","import PropTypes from 'prop-types';\nimport { SubmitForm } from './FormikForm.styled';\n\nconst FormikForm = ({ children }) => {\n  return <SubmitForm>{children}</SubmitForm>;\n};\n\nexport default FormikForm;\n\nFormikForm.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MainTitleStyled = styled.h1`\n  font-weight: 500;\n  font-size: 48px;\n  text-align: center;\n`;\n","import { MainTitleStyled } from './MainTitle.styled.js';\nimport PropTypes from 'prop-types';\n\nconst MainTitle = ({ style, children }) => {\n  return <MainTitleStyled style={style}>{children}</MainTitleStyled>;\n};\n\nexport default MainTitle;\n\nMainTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n  style: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 18px;\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { FormWrapper } from './ContactForm.styled';\nimport FormField from 'components/formField/FormField';\nimport toast from 'react-hot-toast';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'redux/contacts/contactsSlice';\nimport FormFieldWrapper from '../formFieldWrapper';\nimport FormikForm from '../formikForm';\nimport FormButton from '../formButton';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .min(3, 'Too Short!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Name is required'),\n  number: Yup.string()\n    .trim()\n    .min(7, 'Too Short!')\n    .max(15, 'Too Long!')\n    .matches(\n      /^(\\+?\\d+)?\\s*(\\(\\d+\\))?[\\s-]*([\\d-]*)$/,\n      'Phone number is not valid'\n    )\n    .required('Number is required'),\n});\n\nconst ContactForm = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleSubmit = async ({ name, number }, { resetForm }) => {\n    try {\n      const normalizedName = name.toLowerCase();\n\n      const bookContainsName = contacts.filter(contact => {\n        return contact.name.toLowerCase() === normalizedName;\n      });\n\n      if (bookContainsName.length > 0) {\n        return toast.error(`${name} is already in contacts.`);\n      }\n\n      const contact = {\n        name: name.trim(),\n        number: number.trim(),\n      };\n\n      await addContact(contact);\n\n      toast.success('Contact added');\n\n      resetForm();\n    } catch (error) {\n      toast.error('Error when adding contact');\n      console.log(error);\n    }\n  };\n\n  return (\n    <FormWrapper>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <FormikForm>\n          <FormFieldWrapper>\n            <FormField name=\"name\" type=\"text\" title=\"Name\" />\n            <FormField name=\"number\" type=\"tel\" title=\"Number\" />\n          </FormFieldWrapper>\n          <FormButton isLoading={isLoading}>\n            {isLoading ? 'in progress...' : 'Add contact'}\n          </FormButton>\n        </FormikForm>\n      </Formik>\n    </FormWrapper>\n  );\n};\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  width: 530px;\n  :not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport const ItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ItemText = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nexport const ListItemButton = styled.button`\n  padding-top: 4px;\n  padding-bottom: 4px;\n  width: 70px;\n  font-family: inherit;\n  font-weight: 400;\n  font-size: 12px;\n  color: #ffffff;\n  text-align: center;\n  text-transform: uppercase;\n  background-color: #2196f3;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background 250ms linear;\n\n  &:hover,\n  &:focus {\n    background: #188ce8;\n  }\n  &:disabled {\n    background: #bcdcf6;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ListItem,\n  ListItemButton,\n  ItemWrapper,\n  ItemText,\n} from './ContactListItem.styled';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <ListItem>\n      <ItemWrapper>\n        <ItemText>\n          {name}: {number}\n        </ItemText>\n        <ListItemButton\n          type=\"button\"\n          disabled={isLoading}\n          onClick={() => deleteContact(id)}\n        >\n          Delete\n        </ListItemButton>\n      </ItemWrapper>\n    </ListItem>\n  );\n};\n\nexport default ContactListItem;\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n","export const selectValueFilter = state => state.filter.query;\n","import ContactListItem from '../contactListItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\nimport { selectValueFilter } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const query = useSelector(selectValueFilter);\n  const { data: contacts } = useGetContactsQuery();\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = query.toLocaleLowerCase();\n\n    return contacts.filter(contact => {\n      return contact.name.toLocaleLowerCase().includes(normalizedFilter);\n    });\n  };\n\n  if (!contacts) {\n    return null;\n  }\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => {\n        return <ContactListItem key={id} name={name} number={number} id={id} />;\n      })}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\nexport const FindLabel = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-bottom: 28px;\n  font-size: 22px;\n  font-weight: 700;\n  color: #757575;\n`;\nexport const FindInput = styled.input`\n  width: 250px;\n  padding: 3px;\n  margin-left: 23px;\n`;\n","import { FindLabel, FindInput } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setValueFilter } from 'redux/contacts/filterSlice';\nimport { selectValueFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const query = useSelector(selectValueFilter);\n\n  const dispatch = useDispatch();\n\n  const onInputChange = e => {\n    const { value } = e.currentTarget;\n\n    dispatch(setValueFilter(value));\n  };\n\n  return (\n    <FindLabel>\n      Finde contacts by name:\n      <FindInput\n        type=\"text\"\n        name=\"filter\"\n        value={query}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={onInputChange}\n      />\n    </FindLabel>\n  );\n};\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const SecondaryTitleStyled = styled.h2`\n  font-size: 28px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { SecondaryTitleStyled } from './SecondaryTitle.styled';\n\nconst SecondaryTitle = ({ style, children }) => {\n  return <SecondaryTitleStyled style={style}>{children}</SecondaryTitleStyled>;\n};\n\nexport default SecondaryTitle;\n\nSecondaryTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n  style: PropTypes.object,\n};\n","import ContactForm from 'components/contactForm/ContactForm';\nimport ContactList from 'components/contactList/ContactList';\nimport Filter from 'components/filter/Filter';\nimport Loader from 'components/loader/Loader';\nimport { Helmet } from 'react-helmet';\nimport MainTitle from 'components/mainTitle/MainTitle';\nimport SecondaryTitle from 'components/secondaryTitle/SecondaryTitle';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\n\nconst Contacts = () => {\n  const { error, isLoading } = useGetContactsQuery();\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <MainTitle style={{ marginBottom: '28px' }}>Phonebook</MainTitle>\n      <ContactForm />\n      <SecondaryTitle style={{ marginBottom: '28px' }}>Contacts</SecondaryTitle>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      {!isLoading && error && (\n        <b>Something went wrong, try reloading the page</b>\n      )}\n      {!error && <ContactList />}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["SubmitButton","styled","isLoading","children","type","disabled","FormLabel","FormInput","Field","FormError","ErrorMessage","name","title","htmlFor","component","IntupWrapper","SubmitForm","Form","MainTitleStyled","style","FormWrapper","initialValues","number","schema","Yup","shape","trim","min","matches","required","max","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","handleSubmit","resetForm","normalizedName","toLowerCase","bookContainsName","filter","contact","length","toast","console","log","onSubmit","validationSchema","FormField","ListItem","ItemWrapper","ItemText","ListItemButton","id","useDeleteContactMutation","deleteContact","onClick","List","selectValueFilter","state","query","useSelector","visibleContacts","normalizedFilter","toLocaleLowerCase","includes","getVisibleContacts","map","FindLabel","FindInput","dispatch","useDispatch","value","pattern","onChange","e","currentTarget","setValueFilter","SecondaryTitleStyled","error","Helmet","MainTitle","marginBottom","Loader"],"sourceRoot":""}